@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400..900&display=swap');

/* Basic Reset and Body Styles */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html, body {
  height: 100%;
  width: 100%;
  overflow: hidden; /* Prevent scrollbars */
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
  /* background-color: #111; /* Remove default dark background */
  color: #eee;
}

/* Background Layer */
#app-background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -2;
  background-color: #000; /* Fallback background */
  background-size: cover;
  background-position: center;
  /* Add transition for potential future effects */
  transition: background-image 0.5s ease-in-out, background-color 0.5s ease-in-out;
}

/* Zoom Animation */
@keyframes v2SlowZoom {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.05); /* Subtle zoom */
    }
    100% {
        transform: scale(1);
    }
}

/* Zoom effect class */
#app-background.zoom-effect {
    animation: v2SlowZoom 60s ease-in-out infinite;
    transform-origin: center center;
}


/* Overlay Layer */
#app-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.2); /* Set to 0.2 opacity directly */
  z-index: -1;
  pointer-events: none; /* Allow interaction with elements below */
}

/* Elements Container */
#elements-container {
  position: relative; /* Allows absolute positioning of children */
  width: 100%;
  height: 100%;
  overflow: hidden; /* Contain elements */
}

/* Base Element Styling (Applied by BaseUIElement class) */
.base-element {
  position: absolute; /* Positioned by JS */
  /* transform: translate(-50%, -50%); /* Centering handled by JS positioning */
  will-change: transform, opacity; /* Performance hint */
  cursor: grab; /* Indicate draggable */
  /* Add transitions later if desired */
}

.base-element.is-dragging {
    cursor: grabbing; /* Indicate active drag */
    user-select: none; /* Prevent text selection during drag */
    /* Optional: Add a subtle visual cue like a border or shadow */
    /* box-shadow: 0 0 15px rgba(255, 255, 255, 0.3); */
    z-index: 100; /* Bring to front while dragging */
}

/* Controls Panel Styling */
#controls-panel {
  position: fixed;
  top: 10px;
  left: 10px;
  width: 300px; /* Adjust as needed */
  max-height: calc(100vh - 20px); /* Prevent overflow */
  background-color: rgba(40, 40, 45, 0.95); /* Slightly lighter dark */
  color: #e0e0e0;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.6);
  z-index: 1000; /* Ensure it's above other elements */
  overflow-y: auto; /* Allow scrolling if content exceeds height */
  display: none; /* Hidden by default, controlled by JS */
  transition: opacity 0.3s ease, transform 0.3s ease; /* Smooth transition */
  opacity: 0;
  transform: translateX(-10px); /* Start slightly off-screen */
}

#controls-panel.is-open {
  display: block; /* Show when open */
  opacity: 1;
  transform: translateX(0); /* Slide in */
}

/* Styles for sections and groups within the control panel */
.control-section {
  margin-bottom: 20px;
  padding-bottom: 15px;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.control-section:last-child {
  border-bottom: none;
  margin-bottom: 0;
  padding-bottom: 0;
}

.control-section h3 {
  margin-bottom: 15px;
  font-size: 1.1em;
  color: #a0cff0; /* Light blue title */
  border-bottom: 1px solid rgba(255, 255, 255, 0.15);
  padding-bottom: 5px;
}

.control-group {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

.control-group label {
  flex-basis: 120px; /* Fixed width for labels */
  flex-shrink: 0;
  margin-right: 10px;
  font-size: 0.9em;
}

.control-group input[type="color"],
.control-group input[type="range"],
.control-group select {
  flex-grow: 1;
}

.control-group input[type="color"] {
  height: 30px;
  padding: 2px;
  border: 1px solid #555;
  background-color: #333;
  cursor: pointer;
}

.control-group input[type="range"] {
  cursor: pointer;
}

.range-value {
  margin-left: 10px;
  font-size: 0.9em;
  min-width: 30px; /* Ensure space for value */
  text-align: right;
}


/* Version Toggle (Already styled inline in app.js, but can add base styles here) */
#version-toggle {
  /* Styles are set in app.js for simplicity */
}

/* Clock Element Styles */
.clock-face {
  font-size: 2em; /* Base size, can be overridden by scale */
  font-weight: bold;
  text-align: center;
  color: #fff; /* Default clock color, overridden by JS */
  white-space: nowrap; /* Prevent wrapping */
  display: inline-block; /* Allow transform */
  /* Default size for text clocks */
  width: auto;
  height: auto;
}

/* Specific size for analog clock */
.clock-face[data-face-type="analog"] {
  width: 150px; /* Example default size */
  height: 150px;
  font-size: 1em; /* Reset font size for analog */
}

/* Default display states */
.clock-face .analog-face { /* Corrected target */
    display: none; /* Hide analog by default */
}
.clock-face .digital-clean-container {
    display: block; /* Show text container by default */
}

/* Show/Hide based on data attribute */
.clock-face[data-face-type="analog"] .analog-face { /* Corrected target */
    display: block !important; /* Force show analog */
}
.clock-face[data-face-type="analog"] .digital-clean-container {
    display: none !important; /* Force hide text container */
}
.clock-face[data-face-type="digital"] .analog-face, /* Corrected target */
.clock-face[data-face-type="clean"] .analog-face { /* Corrected target */
    display: none !important; /* Force hide analog */
}
.clock-face[data-face-type="digital"] .digital-clean-container,
.clock-face[data-face-type="clean"] .digital-clean-container {
    display: block !important; /* Force show text container */
}

/* Apply Orbitron font specifically for LED face */
.clock-face[data-face-type="led"] .digital-clean-container { /* Changed from digital */
    font-family: 'Orbitron', sans-serif;
    font-weight: 500; /* Adjust weight as needed */
    /* letter-spacing: 0.05em; /* Optional: Add spacing like v1 LED */
}


/* Styles for 'Clean' face spans */
.clock-face .clock-hours,
.clock-face .clock-minutes,
.clock-face .clock-seconds,
.clock-face .clock-separator,
.clock-face .clock-ampm {
  display: inline-block; /* Keep them on the same line */
  /* Add padding or margins if needed for spacing */
  /* padding: 0 0.1em; */
}

.clock-face .clock-ampm {
  font-size: 0.6em; /* Make AM/PM smaller */
  margin-left: 0.3em;
  vertical-align: baseline;
}

/* Date Element Styles */
.date-face {
  /* Styles for the date text itself */
  display: inline-block; /* Allow positioning and separator */
  white-space: nowrap;
}

.date-separator-line {
  display: none; /* Hidden by default, shown by JS */
  width: 100%; /* Span width of container */
  height: 1px;
  /* Use gradient for fade effect */
  background-image: linear-gradient(to right, 
      transparent 0%, 
      var(--separator-color, rgba(255, 255, 255, 0.7)) 20%, /* Fade in */
      var(--separator-color, rgba(255, 255, 255, 0.7)) 80%, /* Solid middle */
      transparent 100% /* Fade out */
  );
  background-color: transparent; /* Remove solid background color */
  margin: 0.3em 0 0; /* Spacing below the date text, no auto margin */
  /* Opacity is handled by the gradient alpha */
}


/* Analog Clock Styles (matching v1) */
.clock-face[data-face-type="analog"] {
  width: 30vw;
  height: 30vw;
  max-width: 400px;
  max-height: 400px;
  position: relative;
}

.clock-face[data-face-type="analog"] .analog-face {
  width: 100%;
  height: 100%;
  border: 4px solid #fff; /* Default color, overridden by JS */
  border-radius: 50%;
  position: relative;
  background-color: rgba(0, 0, 0, 0.1);
}

.clock-face[data-face-type="analog"] .hand {
  position: absolute;
  bottom: 50%;
  left: 50%;
  transform-origin: bottom center;
  border-radius: 2px;
}

.clock-face[data-face-type="analog"] .hour-hand {
  width: 6px;
  height: 25%;
  background-color: #fff; /* Default color, overridden by JS */
  transform: translateX(-50%) rotate(0deg);
}

.clock-face[data-face-type="analog"] .minute-hand {
  width: 4px;
  height: 35%;
  background-color: #fff; /* Default color, overridden by JS */
  transform: translateX(-50%) rotate(0deg);
}

.clock-face[data-face-type="analog"] .second-hand {
  width: 2px;
  height: 40%;
  background-color: #f00; /* Red second hand for visibility */
  transform: translateX(-50%) rotate(0deg);
}

.clock-face[data-face-type="analog"] .center-dot {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 10px;
  height: 10px;
  background-color: #fff; /* Default color, overridden by JS */
  border-radius: 50%;
  transform: translate(-50%, -50%);
  z-index: 10; /* Above hands */
}

/* Markers for 12, 3, 6, 9 positions */
.clock-face[data-face-type="analog"] .marker {
  position: absolute;
  background-color: #fff; /* Default color, overridden by JS */
}

.clock-face[data-face-type="analog"] .marker-12 { 
  top: 5%; 
  left: 50%; 
  width: 3px; 
  height: 10%; 
  transform: translateX(-50%); 
}

.clock-face[data-face-type="analog"] .marker-3 { 
  top: 50%; 
  right: 5%; 
  width: 10%; 
  height: 3px; 
  transform: translateY(-50%); 
}

.clock-face[data-face-type="analog"] .marker-6 { 
  bottom: 5%; 
  left: 50%; 
  width: 3px; 
  height: 10%; 
  transform: translateX(-50%); 
}

.clock-face[data-face-type="analog"] .marker-9 { 
  top: 50%; 
  left: 5%; 
  width: 10%; 
  height: 3px; 
  transform: translateY(-50%); 
}

/* --- Visual Effects --- */

/* Apply effects to the inner face element to avoid scaling issues with reflection */

/* Reflection Effect */
.base-element.effect-reflected .clock-face,
.base-element.effect-reflected .date-face {
    /* Basic reflection - adjust gradient/offset as needed */
    /* Works in Webkit/Blink (Chrome, Edge, Safari, Opera) */
    /* Made more visible: starts fading earlier (30%), higher final opacity (0.25) */
    -webkit-box-reflect: below 1px linear-gradient(transparent 30%, rgba(255, 255, 255, 0.25));
    /* Add a subtle drop shadow for separation */
    filter: drop-shadow(0 3px 3px rgba(0, 0, 0, 0.2));
    /* Reset text-shadow if applied by other effects */
    text-shadow: none;
}

/* Raised Effect */
/* Apply shadows to the container for a general raised look */
.base-element.effect-raised {
    filter: drop-shadow(1px 1px 2px rgba(0,0,0,0.4)) drop-shadow(2px 3px 5px rgba(0,0,0,0.2));
    -webkit-box-reflect: none; /* Ensure no reflection */
}
/* Apply text shadow specifically to the face */
.base-element.effect-raised .clock-face,
.base-element.effect-raised .date-face {
     /* Add text shadow for text elements within */
    /* This might need refinement depending on element structure */
    text-shadow:
        1px 1px 1px rgba(0, 0, 0, 0.4),
        2px 3px 4px rgba(0, 0, 0, 0.2),
        0 0 8px rgba(0, 0, 0, 0.5);
}


/* Flat Effect (Subtle shadow for readability) */
/* Apply shadows to the container */
.base-element.effect-flat {
     filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.3));
     -webkit-box-reflect: none; /* Ensure no reflection */
}
/* Apply text shadow specifically to the face */
.base-element.effect-flat .clock-face,
.base-element.effect-flat .date-face {
     text-shadow: 0 0 8px rgba(0, 0, 0, 0.7);
}

/* Default: Remove filter/text-shadow/reflection if no effect class is present */
.base-element:not(.effect-reflected):not(.effect-raised):not(.effect-flat) {
    filter: none;
    -webkit-box-reflect: none;
}
.base-element:not(.effect-reflected):not(.effect-raised):not(.effect-flat) .clock-face,
.base-element:not(.effect-reflected):not(.effect-raised):not(.effect-flat) .date-face {
    text-shadow: none;
}



/* Add more specific component styles later */
